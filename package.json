{
  "name": "json-synchronized",
  "displayName": "JSON Synchronized",
  "description": "Synchronize JSON objects across multiple files by editing them in a convenient table. Suitable for i18n management.",
  "version": "1.1.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/AbelMSG89/json-synchronized"
  },
  "publisher": "AbelMSG89",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "json",
    "i18n",
    "i18next",
    "translation",
    "locale",
    "localization",
    "table",
    "editor"
  ],
  "icon": "media/logo.png",
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "JSON Synchronized",
      "properties": {
        "json-synchronized.translationService": {
          "type": "string",
          "enum": [
            "",
            "MicrosoftTranslator",
            "GoogleTranslator",
            "AmazonTranslator"
          ],
          "default": "",
          "description": "Translation service to use for automatic translations"
        },
        "json-synchronized.translationServiceApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for the translation service"
        },
        "json-synchronized.translationServiceApiSecret": {
          "type": "string",
          "default": "",
          "description": "API secret for the translation service (required for Amazon)"
        },
        "json-synchronized.translationServiceApiRegion": {
          "type": "string",
          "default": "",
          "description": "API region for the translation service"
        },
        "json-synchronized.translationServiceAmazon": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "",
            "",
            ""
          ],
          "description": "Amazon Translate API settings [apiKey, apiSecret, apiRegion]"
        },
        "json-synchronized.translationServiceGoogle": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "",
            "",
            ""
          ],
          "description": "Google Translate API settings [apiKey, apiSecret, projectId]"
        },
        "json-synchronized.translationServiceMicrosoft": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "",
            "",
            ""
          ],
          "description": "Microsoft Translate API settings [apiKey, apiSecret, apiRegion]"
        },
        "json-synchronized.defaultLanguage": {
          "type": "string",
          "default": "en",
          "description": "Default language code for translations"
        },
        "json-synchronized.envFilePath": {
          "type": "string",
          "default": "",
          "description": "Custom path to environment file (e.g., '.env.development', '.env.production', '/absolute/path/to/.env'). Supports relative paths from workspace root and absolute paths. If empty, uses .env file from workspace root or system environment variables."
        }
      }
    },
    "commands": [
      {
        "command": "json-synchronized.synchronize",
        "title": "Synchronize JSON"
      },
      {
        "command": "json-synchronized.selectEnvFile",
        "title": "Select Environment File",
        "category": "JSON Synchronized"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder",
          "command": "json-synchronized.synchronize",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "format": "prettier --write \"src/**/*.{ts,tsx}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx}\"",
    "test": "vscode-test",
    "build": "node esbuild.js"
  },
  "dependencies": {
    "@google-cloud/translate": "^8.5.1",
    "aws4": "^1.13.2",
    "axios": "^1.10.0",
    "dotenv": "^17.0.0",
    "lucide-react": "^0.525.0",
    "react": "18.3.1",
    "react-dom": "18.3.1"
  },
  "devDependencies": {
    "@types/aws4": "^1.11.6",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/react": "18.3.5",
    "@types/react-dom": "18.3.0",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "8.15.0",
    "@typescript-eslint/parser": "^8.3.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.23.1",
    "eslint": "^9.9.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.6.2",
    "typescript": "^5.5.4"
  }
}
